(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{179:function(n,e,a){"use strict";a.r(e);var t=a(0),r=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("div",{staticClass:"content"},[a("h4",{attrs:{id:"请用递归的方式遍历树形数据结构中的每一个节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请用递归的方式遍历树形数据结构中的每一个节点","aria-hidden":"true"}},[n._v("#")]),n._v(" 请用递归的方式遍历树形数据结构中的每一个节点")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("const options = [\n    {\n        value: 'zhejiang',\n        label: 'Zhejiang',\n        children: [\n            {\n                value: 'hangzhou',\n                label: 'Hangzhou',\n                children: [\n                    {\n                        value: 'xihu',\n                        label: 'West Lake'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        value: 'jiangsu',\n        label: 'Jiangsu',\n        children: [\n            {\n                value: 'nanjing',\n                label: 'Nanjing',\n                children: [\n                    {\n                        value: 'zhonghuamen',\n                        label: 'Zhong Hua Men'\n                    }\n                ]\n            }\n        ]\n    }\n];\nvar elementBox = document.querySelector('.box');\nvar arr = \"\";\nfunction render(opt) {\n    arr += '<ul>';\n    opt.forEach(item => {\n        arr += '<li>';\n        arr += '<h3>' + item.value + '</h3>';\n        if (item.children && item.children.length > 0) {\n            render(item.children)\n        }\n        arr += '</li>';\n    })\n    arr += '</ul>';\n}\nrender(options);\nelementBox.innerHTML = arr;\n")])])]),a("h4",{attrs:{id:"将类似以下json表示的树状结构-可以无限层级-通过parsedom函数-使用document-createelement-document-createtextnode-appendchild等方法-生成一颗dom树-返回一个element元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将类似以下json表示的树状结构-可以无限层级-通过parsedom函数-使用document-createelement-document-createtextnode-appendchild等方法-生成一颗dom树-返回一个element元素","aria-hidden":"true"}},[n._v("#")]),n._v(" 将类似以下JSON表示的树状结构(可以无限层级)通过parseDOM函数(使用document.createElement,document.createTextNode,appendChild等方法)生成一颗DOM树(返回一个element元素)")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('const JsonTree = [\n    {\n        "tagName": "ul",\n        "props": {\n            "className": "list",\n            "data-name": "jsontree"\n        },\n        "children": [\n            {\n                "tagName": "li",\n                "props": {\n                    "className": "list",\n                    "data-name": "jsontree"\n                },\n                "children": "一棵开花的树"\n            },\n            {\n                "tagName": "li",\n                "props": {\n                    "className": "list",\n                    "data-name": "jsontree"\n                },\n                "children": "席慕容"\n            },\n            {\n                "tagName": "li",\n                "props": {\n                    "className": "list",\n                    "data-name": "jsontree"\n                },\n                "children": [\n                    {\n                        "tagName": "p",\n                        "props": {\n                            "className": "list",\n                            "data-name": "jsontree"\n                        },\n                        "children": "海子"\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        "tagName": "a",\n        "props": {\n            "href": "https://www.aliyun.com",\n            "target": "_blank"\n        },\n        "children": "阿里云"\n    }\n];\nvar tree = document.querySelector(\'.tree\');\nfunction parseDOM(opt, tree) {\n    opt.forEach(item => {\n        var elementTree = document.createElement(item.tagName);\n        if (item.props) {\n            for (val in item.props) {\n                elementTree[val] = item.props[val];\n            }\n        }\n        if (item.children) {\n            //判断此处是否为数组，数组递归，不是数组，直接作为节点的文本内容\n            if (item.children instanceof Array && item.children.length > 0){\n                parseDOM(item.children, elementTree)\n            }else{\n                elementTree.innerHTML = item.children;\n            }\n        }\n        tree.appendChild(elementTree)\n    })\n}\n//调用传入dom树数据，父节点\nparseDOM(JsonTree, tree);\n')])])]),a("h4",{attrs:{id:"不借助外部变量，交换两数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不借助外部变量，交换两数","aria-hidden":"true"}},[n._v("#")]),n._v(" 不借助外部变量，交换两数")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function numberChange(a,b){\n    a=a+b;\n    b=a-b;\n    a=a-b;\n    return {a,b}\n}\nnumberChange(7,8)//{a: 8, b: 7}\n")])])]),a("h4",{attrs:{id:"可借助外部变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可借助外部变量","aria-hidden":"true"}},[n._v("#")]),n._v(" 可借助外部变量")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function numChange(a,b){\n    var temp=null;\n    temp=a;\n    a=b;\n    b=temp;\n    return {a,b}\n}\nnumChange(8,9)//{a: 9, b: 8}\n")])])])])}],!1,null,null,null);e.default=r.exports}}]);